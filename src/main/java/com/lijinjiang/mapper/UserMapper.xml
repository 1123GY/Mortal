<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lijinjiang.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lijinjiang.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
    <result column="user_qq" property="userQQ" jdbcType="VARCHAR" />
    <result column="user_url" property="userUrl" jdbcType="VARCHAR" />
    <result column="user_photo" property="userPhoto" jdbcType="VARCHAR" />
    <result column="user_last_login_ip" property="userLastLoginIp" jdbcType="VARCHAR" />
    <result column="user_register_time" property="userRegisterTime" jdbcType="TIMESTAMP" />
    <result column="user_last_login_time" property="userLastLoginTime" jdbcType="TIMESTAMP" />
    <result column="user_role" property="userRole" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, user_password, user_nickname, user_qq, user_url, user_photo,
    user_last_login_ip, user_register_time, user_last_login_time, user_role
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lijinjiang.entity.User" >
    insert into user (user_id, user_name, user_password,
      user_nickname, user_qq, user_url,
      user_photo, user_last_login_ip, user_register_time,
      user_last_login_time, user_role)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
      #{userNickname,jdbcType=VARCHAR}, #{userQQ,jdbcType=VARCHAR}, #{userUrl,jdbcType=VARCHAR},
      #{userPhoto,jdbcType=VARCHAR}, #{userLastLoginIp,jdbcType=VARCHAR}, #{userRegisterTime,jdbcType=TIMESTAMP},
      #{userLastLoginTime,jdbcType=TIMESTAMP}, #{userRole,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lijinjiang.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userNickname != null" >
        user_nickname,
      </if>
      <if test="userQQ != null" >
        user_qq,
      </if>
      <if test="userUrl != null" >
        user_url,
      </if>
      <if test="userPhoto != null" >
        user_photo,
      </if>
      <if test="userLastLoginIp != null" >
        user_last_login_ip,
      </if>
      <if test="userRegisterTime != null" >
        user_register_time,
      </if>
      <if test="userLastLoginTime != null" >
        user_last_login_time,
      </if>
      <if test="userRole != null" >
        user_role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null" >
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userQQ != null" >
        #{userQQ,jdbcType=VARCHAR},
      </if>
      <if test="userUrl != null" >
        #{userUrl,jdbcType=VARCHAR},
      </if>
      <if test="userPhoto != null" >
        #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userLastLoginIp != null" >
        #{userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="userRegisterTime != null" >
        #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastLoginTime != null" >
        #{userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lijinjiang.entity.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null" >
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userQQ != null" >
        user_qq = #{userQQ,jdbcType=VARCHAR},
      </if>
      <if test="userUrl != null" >
        user_url = #{userUrl,jdbcType=VARCHAR},
      </if>
      <if test="userPhoto != null" >
        user_photo = #{userPhoto,jdbcType=VARCHAR},
      </if>
      <if test="userLastLoginIp != null" >
        user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="userRegisterTime != null" >
        user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastLoginTime != null" >
        user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userRole != null" >
        user_role = #{userRole,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lijinjiang.entity.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_qq = #{userQQ,jdbcType=VARCHAR},
      user_url = #{userUrl,jdbcType=VARCHAR},
      user_photo = #{userPhoto,jdbcType=VARCHAR},
      user_last_login_ip = #{userLastLoginIp,jdbcType=VARCHAR},
      user_register_time = #{userRegisterTime,jdbcType=TIMESTAMP},
      user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},
      user_role = #{userRole,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>